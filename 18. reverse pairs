#include <bits/stdc++.h> 
void merge(vector<int> &arr,int low,int mid,int high)
{
	vector<int>temp;
	int i=low;
	int j=mid+1;

	while(i<=mid && j<=high)
	{
		if(arr[i]>arr[j])
		{
			temp.push_back(arr[j++]);
		}
		else
		temp.push_back(arr[i++]);
	}

    while(i<=mid)
	{
	  temp.push_back(arr[i++]);
		
	}
     while(j<=high)
	{
	  temp.push_back(arr[j++]);
		
	}

	for(int i=low;i<=high;i++)
	{
		arr[i]=temp[i-low];
	}
}
int mergesort(vector<int> &arr,int low,int high)
{
	if(low>=high) return 0;
	int ct=0;
	int mid= (low+high)/2;
	ct+=mergesort(arr,low,mid);
	ct+=mergesort(arr,mid+1,high);
	int j=mid+1;
	for(int i=low;i<=mid;i++)
	{
		while(j<=high && arr[i]>2*arr[j]) j++;
		ct+=(j-(mid+1));
	}
	merge(arr,low,mid,high);
	return ct;

}

int reversePairs(vector<int> &arr, int n){
	return mergesort(arr,0,n-1);
}
